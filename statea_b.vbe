-- VHDL data flow description generated from `statea_b`
--		date : Thu Apr 26 01:39:09 2018


-- Entity Declaration

ENTITY statea_b IS
  PORT (
  ck : in BIT;	-- ck
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  i : in bit_vector(2 DOWNTO 0) ;	-- i
  chng : out bit_vector(1 DOWNTO 0) ;	-- chng
  reset : in BIT;	-- reset
  o : out bit_vector(1 DOWNTO 0) 	-- o
  );
END statea_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF statea_b IS
  SIGNAL sdet_cs : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- sdet_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13

BEGIN
  aux13 <= (reset OR (aux2 AND i(2)));
  aux12 <= (NOT(reset) AND NOT(i(2)));
  aux10 <= NOT(sdet_cs(1) OR i(1));
  aux9 <= (NOT(i(0)) AND i(1));
  aux8 <= (NOT(sdet_cs(1)) AND aux7);
  aux7 <= (i(0) XOR i(1));
  aux6 <= (sdet_cs(1) AND NOT(i(0)));
  aux5 <= (((i(0) AND i(1)) AND sdet_cs(2)) AND sdet_cs(0));
  aux2 <= (aux1 AND sdet_cs(0));
  aux1 <= (aux0 AND sdet_cs(2));
  aux0 <= (NOT(i(0)) AND NOT(i(1)));
  label0 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (0) <= GUARDED (((((aux9 AND NOT(sdet_cs(2))) OR aux8) AND NOT(
sdet_cs(0))) OR (aux6 AND (i(1) XOR sdet_cs(2)))) AND aux12
);
  END BLOCK label0;
  label1 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (1) <= GUARDED (aux13 OR (((sdet_cs(1) AND i(0) AND NOT(i(1))) 
OR sdet_cs(0)) AND ((NOT(aux10) AND i(0) AND 
sdet_cs(2)) OR (aux0 AND NOT(sdet_cs(2)))) AND NOT(i(2))));
  END BLOCK label1;
  label2 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (2) <= GUARDED (aux13 OR ((((aux6 OR NOT(sdet_cs(2))) AND 
sdet_cs(1) AND aux7) OR aux5 OR (NOT(aux1) AND (aux9 OR 
aux10) AND NOT(sdet_cs(0)))) AND NOT(i(2))));
  END BLOCK label2;

o (0) <= (aux2 AND NOT(reset) AND i(2));

o (1) <= (aux5 AND aux12);

chng (0) <= (((aux8 AND sdet_cs(2) AND NOT(sdet_cs(0))) OR (
aux6 AND i(1) AND NOT(sdet_cs(2)))) AND aux12);

chng (1) <= (NOT(sdet_cs(1)) AND NOT(i(0)) AND i(1) AND NOT(
sdet_cs(0)) AND aux12);
END;
