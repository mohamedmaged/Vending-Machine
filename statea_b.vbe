-- VHDL data flow description generated from `statea_b`
--		date : Sun Apr 15 20:19:51 2018


-- Entity Declaration

ENTITY statea_b IS
  PORT (
  ck : in BIT;	-- ck
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  i : in bit_vector(2 DOWNTO 0) ;	-- i
  chng : out bit_vector(1 DOWNTO 0) ;	-- chng
  reset : in BIT;	-- reset
  o : out bit_vector(1 DOWNTO 0) 	-- o
  );
END statea_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF statea_b IS
  SIGNAL sdet_cs : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- sdet_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13
  SIGNAL aux14 : BIT;		-- aux14

BEGIN
  aux14 <= NOT(i(1) AND i(0));
  aux13 <= (sdet_cs(1) AND sdet_cs(2));
  aux12 <= (NOT(sdet_cs(1)) AND NOT(sdet_cs(0)));
  aux11 <= (sdet_cs(2) AND sdet_cs(0));
  aux10 <= NOT(i(1) OR NOT(i(0)));
  aux9 <= ((i(2) AND NOT(i(1))) AND NOT(i(0)));
  aux7 <= ((aux0 AND aux5) AND NOT(sdet_cs(1)));
  aux5 <= (i(1) XOR i(0));
  aux4 <= ((aux2 AND sdet_cs(1)) AND NOT(sdet_cs(2)));
  aux2 <= (aux1 AND NOT(i(0)));
  aux1 <= (aux0 AND i(1));
  aux0 <= (NOT(i(2)) AND NOT(reset));
  label0 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    sdet_cs (0) <= GUARDED ((aux7 AND NOT(sdet_cs(0))) OR (aux0 AND NOT(i(1)
) AND NOT(i(0)) AND aux13) OR aux4);
  END BLOCK label0;
  label1 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    sdet_cs (1) <= GUARDED ((reset OR (aux10 AND aux13) OR sdet_cs(0)) AND (
reset OR ((NOT(aux10) OR sdet_cs(1)) AND ((NOT(i(2)) 
AND i(0)) OR aux9) AND sdet_cs(2)) OR (NOT(i(2)) AND
 NOT(i(1)) AND NOT(i(0)) AND NOT(sdet_cs(2)))));
  END BLOCK label1;
  label2 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    sdet_cs (2) <= GUARDED (((reset OR NOT(i(0)) OR NOT(aux13)) AND ((NOT(
i(2)) AND aux5 AND sdet_cs(1)) OR reset)) OR (((NOT(
i(2)) AND NOT(aux14)) OR aux9) AND aux11) OR ((i(1) 
OR i(0) OR NOT(sdet_cs(2))) AND NOT(i(2)) AND aux14
 AND aux12));
  END BLOCK label2;

o (0) <= (i(2) AND NOT(reset) AND NOT(i(1)) AND NOT(i(0)) 
AND aux11);

o (1) <= (aux1 AND i(0) AND aux11);

chng (0) <= ((aux7 AND sdet_cs(2) AND NOT(sdet_cs(0))) OR 
aux4);

chng (1) <= (aux2 AND aux12);
END;
