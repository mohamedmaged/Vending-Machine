-- VHDL data flow description generated from `statej_b`
--		date : Thu May 10 23:30:17 2018


-- Entity Declaration

ENTITY statej_b IS
  PORT (
  ck : in BIT;	-- ck
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  i : in bit_vector(2 DOWNTO 0) ;	-- i
  chng : out bit_vector(1 DOWNTO 0) ;	-- chng
  reset : in BIT;	-- reset
  o : out bit_vector(1 DOWNTO 0) 	-- o
  );
END statej_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF statej_b IS
  SIGNAL sdet_cs : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- sdet_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8

BEGIN
  aux8 <= NOT(NOT(i(1)) AND NOT(sdet_cs(1)));
  aux7 <= (NOT(sdet_cs(1)) AND NOT(sdet_cs(2)));
  aux6 <= (i(2) OR aux2);
  aux5 <= (i(0) AND i(1));
  aux4 <= (aux3 AND NOT(i(0)));
  aux3 <= (NOT(i(2)) AND NOT(reset));
  aux2 <= NOT(i(0) XOR i(1));
  aux1 <= (NOT(aux0) AND NOT(reset));
  aux0 <= NOT(NOT(sdet_cs(0)) AND NOT(i(2)));
  label0 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    sdet_cs (0) <= GUARDED ((((sdet_cs(0) AND NOT(i(0))) OR NOT(sdet_cs(1)))
 AND ((NOT(i(2)) AND i(0) AND i(1)) OR (aux0 AND 
NOT(i(0)) AND NOT(i(1)))) AND NOT(sdet_cs(2))) OR ((
NOT(aux3) OR aux5) AND (sdet_cs(0) OR reset)));
  END BLOCK label0;
  label1 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    sdet_cs (1) <= GUARDED ((((aux6 AND sdet_cs(0) AND NOT(reset)) OR ((NOT(
sdet_cs(0)) OR NOT(i(0)) OR i(1)) AND (i(2) OR i(0)) AND 
NOT(reset) AND sdet_cs(1)) OR (aux4 AND NOT(aux8))) 
AND sdet_cs(2)) OR (((NOT(i(2)) AND NOT(aux5)) OR 
sdet_cs(1)) AND (aux0 OR aux5) AND NOT(reset) AND NOT(
sdet_cs(2))));
  END BLOCK label1;
  label2 : BLOCK ((NOT((ck'STABLE)) AND ck) = '1')
  BEGIN
    sdet_cs (2) <= GUARDED (((i(2) OR aux8) AND aux6 AND NOT(reset) AND 
sdet_cs(2)) OR (sdet_cs(0) AND NOT(i(2)) AND NOT(reset) AND
 NOT(i(1))));
  END BLOCK label2;

o (0) <= (NOT(sdet_cs(0)) AND i(2) AND NOT(reset) AND NOT(
i(0)) AND NOT(i(1)) AND aux7);

o (1) <= (aux1 AND i(0) AND i(1) AND aux7);

chng (0) <= (((aux1 AND NOT(i(0))) OR NOT(sdet_cs(2))) AND 
aux3 AND NOT(aux2) AND sdet_cs(1));

chng (1) <= (aux4 AND i(1) AND (sdet_cs(1) XOR sdet_cs(2)));
END;
