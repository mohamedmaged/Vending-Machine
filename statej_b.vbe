-- VHDL data flow description generated from `statej_b`
--		date : Fri Apr 27 14:06:20 2018


-- Entity Declaration

ENTITY statej_b IS
  PORT (
  ck : in BIT;	-- ck
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  i : in bit_vector(2 DOWNTO 0) ;	-- i
  chng : out bit_vector(1 DOWNTO 0) ;	-- chng
  reset : in BIT;	-- reset
  o : out bit_vector(1 DOWNTO 0) 	-- o
  );
END statej_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF statej_b IS
  SIGNAL sdet_cs : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- sdet_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux9 : BIT;		-- aux9

BEGIN
  aux9 <= (NOT(i(2)) AND sdet_cs(2));
  aux8 <= (NOT(sdet_cs(2)) AND sdet_cs(1));
  aux7 <= NOT(NOT(i(2)) AND NOT(sdet_cs(2)));
  aux6 <= NOT(i(2) XOR sdet_cs(0));
  aux5 <= (aux4 AND NOT(sdet_cs(1)));
  aux4 <= (NOT(i(2)) AND NOT(sdet_cs(0)));
  aux3 <= (aux2 AND i(1));
  aux2 <= ((aux0 AND NOT(sdet_cs(1))) AND i(0));
  aux0 <= (NOT(i(2)) AND sdet_cs(0));
  label0 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (0) <= GUARDED (((aux2 OR (NOT(i(2)) AND (NOT(sdet_cs(0)) OR 
aux8) AND NOT(i(0)))) AND i(1)) OR (((NOT(i(2)) AND 
NOT(sdet_cs(0) XOR aux8) AND i(0)) OR ((NOT(aux7) OR 
NOT(sdet_cs(1))) AND aux6 AND NOT(i(0)))) AND NOT(
i(1))) OR reset);
  END BLOCK label0;
  label1 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (1) <= GUARDED (((aux2 OR (aux4 AND sdet_cs(2) AND NOT(i(0)))) 
AND i(1)) OR ((aux9 OR NOT(i(0))) AND (NOT(i(2)) OR 
NOT(sdet_cs(1))) AND (aux9 OR aux6) AND NOT(i(1))) 
OR reset);
  END BLOCK label1;
  label2 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (2) <= GUARDED (aux3 OR ((aux0 OR NOT(sdet_cs(1))) AND aux7 AND 
sdet_cs(0) AND NOT(i(0)) AND NOT(i(1))) OR reset);
  END BLOCK label2;

o (0) <= (i(2) AND sdet_cs(0) AND NOT(sdet_cs(1)) AND NOT(
i(0)) AND NOT(i(1)) AND NOT(reset));

o (1) <= (aux3 AND NOT(reset));

chng (0) <= (((aux4 AND (NOT(sdet_cs(2)) OR NOT(sdet_cs(1))) 
AND NOT(i(0)) AND i(1)) OR (aux5 AND i(0) AND NOT(
i(1)))) AND NOT(reset));

chng (1) <= (((aux0 AND NOT(sdet_cs(2)) AND sdet_cs(1)) OR 
aux5) AND NOT(i(0)) AND i(1) AND NOT(reset));
END;
