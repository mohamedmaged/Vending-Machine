-- VHDL data flow description generated from `statem_b`
--		date : Fri Apr 27 14:06:20 2018


-- Entity Declaration

ENTITY statem_b IS
  PORT (
  ck : in BIT;	-- ck
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  i : in bit_vector(2 DOWNTO 0) ;	-- i
  chng : out bit_vector(1 DOWNTO 0) ;	-- chng
  reset : in BIT;	-- reset
  o : out bit_vector(1 DOWNTO 0) 	-- o
  );
END statem_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF statem_b IS
  SIGNAL sdet_cs : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- sdet_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux1 : BIT;		-- aux1
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux9 : BIT;		-- aux9
  SIGNAL aux10 : BIT;		-- aux10
  SIGNAL aux11 : BIT;		-- aux11
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux13 : BIT;		-- aux13

BEGIN
  aux13 <= NOT(NOT(sdet_cs(0)) OR sdet_cs(2));
  aux12 <= (sdet_cs(0) AND aux11);
  aux11 <= (NOT(sdet_cs(2)) AND NOT(reset));
  aux10 <= (aux0 AND NOT(i(2)));
  aux9 <= ((i(0) OR i(2)) OR sdet_cs(1));
  aux7 <= ((NOT(i(0)) OR NOT(sdet_cs(1))) AND aux5);
  aux5 <= (aux4 AND NOT(i(2)));
  aux4 <= (i(0) XOR i(1));
  aux3 <= ((i(0) AND i(1)) AND NOT(i(2)));
  aux1 <= (aux0 AND i(2));
  aux0 <= (NOT(i(0)) AND NOT(i(1)));
  label0 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (0) <= GUARDED ((aux5 AND NOT(sdet_cs(1)) AND sdet_cs(2)) OR (((
aux9 AND (aux1 OR (i(1) AND NOT(i(2)))) AND 
sdet_cs(0)) OR (aux7 AND NOT(sdet_cs(0)))) AND NOT(
sdet_cs(2))) OR reset);
  END BLOCK label0;
  label1 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (1) <= GUARDED ((((NOT(i(0)) AND sdet_cs(1)) OR sdet_cs(0)) AND 
NOT(i(1)) AND NOT(i(2)) AND sdet_cs(2)) OR ((aux1 OR
 aux3) AND aux13) OR reset);
  END BLOCK label1;
  label2 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (2) <= GUARDED ((((aux10 AND sdet_cs(0)) OR (aux5 AND sdet_cs(1)
 AND NOT(sdet_cs(0)))) AND sdet_cs(2)) OR (((aux9 
AND (NOT(i(0)) OR NOT(i(2))) AND NOT(aux4) AND 
sdet_cs(0)) OR (aux10 AND NOT(sdet_cs(0)))) AND NOT(
sdet_cs(2))) OR reset);
  END BLOCK label2;

o (0) <= (aux1 AND aux12);

o (1) <= (aux3 AND aux12);

chng (0) <= ((sdet_cs(1) OR NOT(sdet_cs(0))) AND aux7 AND 
aux11);

chng (1) <= (NOT(i(0)) AND i(1) AND NOT(i(2)) AND NOT(
sdet_cs(1)) AND NOT(aux13) AND NOT(reset));
END;
