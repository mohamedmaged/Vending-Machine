-- VHDL data flow description generated from `stateo_b`
--		date : Sun Apr 15 19:36:43 2018


-- Entity Declaration

ENTITY stateo_b IS
  PORT (
  ck : in BIT;	-- ck
  vss : in BIT;	-- vss
  vdd : in BIT;	-- vdd
  i : in bit_vector(2 DOWNTO 0) ;	-- i
  chng : out bit_vector(1 DOWNTO 0) ;	-- chng
  reset : in BIT;	-- reset
  o : out bit_vector(1 DOWNTO 0) 	-- o
  );
END stateo_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF stateo_b IS
  SIGNAL sdet_cs : REG_VECTOR(5 DOWNTO 0) REGISTER;	-- sdet_cs
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux7 : BIT;		-- aux7
  SIGNAL aux8 : BIT;		-- aux8

BEGIN
  aux8 <= (NOT(i(2)) AND NOT(reset));
  aux7 <= (i(1) AND NOT(i(0)));
  aux6 <= (i(1) XOR i(0));
  aux5 <= ((aux3 AND sdet_cs(0)) AND NOT(i(2)));
  aux3 <= (i(1) AND i(0));
  aux2 <= ((aux0 AND sdet_cs(0)) AND i(2));
  aux0 <= (NOT(i(1)) AND NOT(i(0)));
  label0 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (0) <= GUARDED ((sdet_cs(3) OR (NOT(i(0)) AND sdet_cs(2)) OR 
sdet_cs(1)) AND aux6 AND aux8);
  END BLOCK label0;
  label1 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (1) <= GUARDED ((aux0 OR sdet_cs(4)) AND (sdet_cs(3) OR i(1) OR 
i(0) OR sdet_cs(2)) AND NOT(aux3) AND aux8);
  END BLOCK label1;
  label2 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (2) <= GUARDED ((i(0) OR sdet_cs(4)) AND NOT(i(1)) AND (
sdet_cs(5) OR NOT(i(0))) AND aux8);
  END BLOCK label2;
  label3 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (3) <= GUARDED ((i(1) OR (i(0) AND sdet_cs(2)) OR sdet_cs(1)) 
AND (NOT(i(0)) OR sdet_cs(2)) AND (NOT(i(1)) OR (
sdet_cs(5) AND NOT(i(0)))) AND aux8);
  END BLOCK label3;
  label4 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (4) <= GUARDED (NOT(i(1)) AND sdet_cs(5) AND NOT(i(0)) AND aux8);
  END BLOCK label4;
  label5 : BLOCK ((ck AND NOT((ck'STABLE))) = '1')
  BEGIN
    sdet_cs (5) <= GUARDED (aux2 OR aux5 OR reset);
  END BLOCK label5;

o (0) <= (aux2 AND NOT(reset));

o (1) <= (aux5 AND NOT(reset));

chng (0) <= (((aux7 AND sdet_cs(2)) OR (sdet_cs(3) AND aux6))
 AND aux8);

chng (1) <= ((sdet_cs(3) OR sdet_cs(1)) AND aux7 AND aux8);
END;
